{"ast":null,"code":"var _jsxFileName = \"/Users/learnacademy/Desktop/PetWellnessApp/pet_wellness_app1/app/javascript/components/pages/EditPet.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React, { Component } from 'react';\nimport { Form, FormGroup, Container, Input, Label, Button, Row, Col } from 'reactstrap';\nimport { Redirect, NavLink } from 'react-router-dom';\nimport SideBar from '../components/SideBar';\n\nvar EditPet = /*#__PURE__*/function (_Component) {\n  _inherits(EditPet, _Component);\n\n  var _super = _createSuper(EditPet);\n\n  function EditPet(props) {\n    var _this;\n\n    _classCallCheck(this, EditPet);\n\n    _this = _super.call(this, props);\n\n    _this.handleChange = function (e) {\n      var form = _this.state.form;\n      form[e.target.name] = e.target.value;\n\n      _this.setState({\n        form: form\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var _this$state$form = _this.state.form,\n          name = _this$state$form.name,\n          dob = _this$state$form.dob,\n          breed = _this$state$form.breed,\n          sex = _this$state$form.sex;\n\n      if (name == \"\") {\n        alert(\"Name must be filled\");\n      } else if (dob == \"\") {\n        alert(\"DOB must be filled\");\n      } else if (breed == \"\") {\n        alert(\"Breed must be filled\");\n      } else if (sex == \"\") {\n        alert(\"Sex must be selected\");\n      } else {\n        _this.props.editPet(_this.state.form, _this.props.pet.id);\n\n        _this.setState({\n          success: true\n        });\n      }\n    };\n\n    _this.state = {\n      form: {\n        name: _this.props.pet.name,\n        dob: _this.props.pet.dob,\n        sex: _this.props.pet.sex,\n        breed: _this.props.pet.breed,\n        medical: _this.props.pet.medical,\n        digestion: _this.props.pet.digestion,\n        appointment: _this.props.pet.appointment,\n        diary: _this.props.pet.diary,\n        misc: _this.props.pet.misc,\n        user_id: _this.props.current_user.id\n      },\n      success: false\n    };\n    return _this;\n  }\n\n  _createClass(EditPet, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(SideBar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, \"Edit Pet\"), /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"section\", {\n        id: \"general\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Required\",\n        value: this.state.form.name,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }\n      }, \"DOB (Required)\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"date\",\n        name: \"dob\",\n        value: this.state.form.dob,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }\n      }, \"Breed\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"breed\",\n        placeholder: \"Required\",\n        value: this.state.form.breed,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(FormGroup, {\n        tag: \"fieldset\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }\n      }, \"Sex (Required)\"), /*#__PURE__*/React.createElement(FormGroup, {\n        check: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        check: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"radio\",\n        name: \"sex\",\n        value: \"Male\",\n        checked: this.state.form.sex === 'Male',\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }\n      }), \"Male\")), /*#__PURE__*/React.createElement(FormGroup, {\n        check: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        check: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"radio\",\n        name: \"sex\",\n        value: \"Female\",\n        checked: this.state.form.sex === 'Female',\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }\n      }), \"Female\")))), /*#__PURE__*/React.createElement(\"section\", {\n        id: \"medical\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }\n      }, \"Medical\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"medical\",\n        placeholder: \"Optional\",\n        value: this.state.form.medical,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(\"section\", {\n        id: \"digestion\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }\n      }, \"Digestion\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"digestion\",\n        placeholder: \"Optional\",\n        value: this.state.form.digestion,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"section\", {\n        id: \"appointment\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }\n      }, \"Appointment\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"appointment\",\n        placeholder: \"Optional\",\n        value: this.state.form.appointment,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(\"section\", {\n        id: \"diary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }\n      }, \"Diary\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"diary\",\n        placeholder: \"Optional\",\n        value: this.state.form.diary,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(\"section\", {\n        id: \"misc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }\n      }, \"Miscellaneous\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"misc\",\n        placeholder: \"Optional\",\n        value: this.state.form.misc,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        name: \"submit\",\n        color: \"secondary\",\n        onClick: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }\n      }, \"Save Pet\")))))), this.state.success && /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/show/\".concat(this.props.pet.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 41\n        }\n      }));\n    }\n  }]);\n\n  return EditPet;\n}(Component);\n\nexport default EditPet;","map":{"version":3,"sources":["/Users/learnacademy/Desktop/PetWellnessApp/pet_wellness_app1/app/javascript/components/pages/EditPet.js"],"names":["React","Component","Form","FormGroup","Container","Input","Label","Button","Row","Col","Redirect","NavLink","SideBar","EditPet","props","handleChange","e","form","state","target","name","value","setState","handleSubmit","preventDefault","dob","breed","sex","alert","editPet","pet","id","success","medical","digestion","appointment","diary","misc","user_id","current_user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Form, FormGroup, Container, Input, Label, Button, Row, Col } from 'reactstrap';\nimport {Redirect, NavLink} from 'react-router-dom'\nimport SideBar from '../components/SideBar'\n\n\nclass EditPet extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            form : {\n                name: this.props.pet.name,\n                dob: this.props.pet.dob,\n                sex: this.props.pet.sex,\n                breed:  this.props.pet.breed,\n                medical: this.props.pet.medical,\n                digestion: this.props.pet.digestion,\n                appointment: this.props.pet.appointment,\n                diary: this.props.pet.diary,\n                misc: this.props.pet.misc,\n                user_id: this.props.current_user.id\n            },\n            success : false\n        }\n    }\n\n    handleChange = (e) => {\n        let {form} = this.state\n        form[e.target.name] = e.target.value\n        this.setState({ form: form })\n    }\n\n\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        let { name, dob, breed, sex } = this.state.form\n        if(name == \"\"){\n            alert(\"Name must be filled\")\n        } else if (dob == \"\"){\n            alert(\"DOB must be filled\")\n        } else if (breed == \"\"){\n            alert(\"Breed must be filled\")\n        } else if (sex == \"\"){\n            alert(\"Sex must be selected\")\n        } else {\n        this.props.editPet(this.state.form, this.props.pet.id)\n        this.setState({ success: true })\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Container>\n                <Row>\n                    <Col>\n                    <SideBar />\n                    </Col>\n\n                <Col>\n            <h2>Edit Pet</h2>\n            <Form>\n                <section id = \"general\">\n                <FormGroup>\n                    <Label>Name</Label>\n                    <Input\n                    type = \"text\"\n                    name = \"name\"\n                    placeholder=\"Required\"\n                    value = { this.state.form.name }\n                    onChange = { this.handleChange }\n                    />\n                </FormGroup>\n                <FormGroup>\n                    <Label>DOB (Required)</Label>\n                    <Input\n                    type = \"date\"\n                    name = \"dob\"\n                    value = { this.state.form.dob }\n                    onChange = { this.handleChange }\n                    />\n                </FormGroup>\n                <FormGroup>\n                    <Label>Breed</Label>\n                    <Input\n                    type = \"text\"\n                    name = \"breed\"\n                    placeholder=\"Required\"\n                    value = { this.state.form.breed }\n                    onChange = { this.handleChange }\n                    />\n                </FormGroup>\n                <FormGroup tag=\"fieldset\">\n                    <Label>Sex (Required)</Label>\n                    <FormGroup check>\n                    <Label check>\n                        <Input\n                        type=\"radio\"\n                        name=\"sex\"\n                        value = \"Male\"\n                        checked={this.state.form.sex === 'Male'}\n                        onChange = { this.handleChange }/>\n                        Male\n                    </Label>\n                    </FormGroup>\n                    <FormGroup check>\n                    <Label check>\n                        <Input\n                        type=\"radio\"\n                        name=\"sex\"\n                        value = \"Female\"\n                        checked={this.state.form.sex === 'Female'}\n                        onChange = { this.handleChange }/>\n                        Female\n                    </Label>\n                    </FormGroup>\n                </FormGroup>\n                </section>\n\n                <section id= \"medical\">\n                    <FormGroup>\n                    <Label>Medical</Label>\n                    <Input\n                    type = \"text\"\n                    name = \"medical\"\n                    placeholder=\"Optional\"\n                    value = { this.state.form.medical }\n                    onChange = { this.handleChange }\n                    />\n                    </FormGroup>\n                </section>\n\n                <section id= \"digestion\">\n                    <FormGroup>\n                        <Label>Digestion</Label>\n                        <Input\n                        type = \"text\"\n                        name = \"digestion\"\n                        placeholder=\"Optional\"\n                        value = { this.state.form.digestion }\n                        onChange = { this.handleChange }\n                        />\n                    </FormGroup>\n                </section>\n\n                <section id= \"appointment\">\n                <FormGroup>\n                    <Label>Appointment</Label>\n                    <Input\n                    type = \"text\"\n                    name = \"appointment\"\n                    placeholder=\"Optional\"\n                    value = { this.state.form.appointment }\n                    onChange = { this.handleChange }\n                    />\n                </FormGroup>\n                </section>\n\n                <section id= \"diary\">\n                <FormGroup>\n                    <Label>Diary</Label>\n                    <Input\n                    type = \"text\"\n                    name = \"diary\"\n                    placeholder=\"Optional\"\n                    value = { this.state.form.diary }\n                    onChange = { this.handleChange }\n                    />\n                </FormGroup>\n                </section>\n\n                <section id= \"misc\">\n\n                    <FormGroup>\n                    <Label>Miscellaneous</Label>\n                    <Input\n                    type = \"text\"\n                    name = \"misc\"\n                    placeholder=\"Optional\"\n                    value = { this.state.form.misc }\n                    onChange = { this.handleChange }\n                    />\n                    </FormGroup>\n                    <Button\n                    name=\"submit\"\n                    color = \"secondary\"\n                    onClick = {this.handleSubmit}\n                    >\n                    Save Pet\n                    </Button>\n                </section>\n            </Form>\n\n            </Col>\n            </Row>\n            </Container>\n                { this.state.success && <Redirect to = {`/show/${this.props.pet.id}`} />}\n            </React.Fragment>\n        )\n    }\n}\n\nexport default EditPet"]},"metadata":{},"sourceType":"module"}